{"version":3,"file":"static/js/602.6f867ee3.chunk.js","mappings":"6LAEaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAI5D,C,sGCkED,UA7EqB,WAAO,IAAD,EACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAC5CC,EAAc,MAElBC,EAAAA,EAAAA,YAAU,WACHd,IACLM,GAAU,IACVS,EAAAA,EAAAA,IAAef,GACZgB,MAAK,SAAAC,GACJb,EAAgBa,EACjB,IACAC,SAAQ,kBAAMZ,GAAU,EAAhB,IACZ,GAAE,CAACN,IAEAG,IACFU,EAAcV,EAAagB,aAAaC,MAAM,EAAG,IAKnD,OACE,gCACGf,IAAU,SAAC,IAAD,IACVF,IACC,iCACE,SAAC,KAAD,CAAMkB,GAAIZ,EAASa,QAAnB,SAA4B,aAE5B,gBACEC,IACEpB,EAAaqB,YAAb,0CACuCrB,EAAaqB,aAX9D,8EAcQ7B,MAAO,IACP8B,IAAI,YAEN,0BACGtB,EAAauB,MAAM,KAAGb,EAAY,QAErC,yBAAG,eAAyC,GAA5BV,EAAawB,aAAkB,QAC/C,wBAAI,cACJ,uBAAIxB,EAAayB,YACjB,wBAAI,YACJ,wBACGzB,EAAa0B,OAAOC,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAC9B,OACE,eACEC,MAAO,CACLC,YAAa,QAFjB,SAMGF,GAFID,EAKV,OAEH,uBAAG,4BAEH,2BACE,yBACE,SAAC,KAAD,CAAMV,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,KAAD,SAKT,C,yLCjFKc,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,CAAC,EAA1D,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,GAE7C,CAEM,SAASrB,EAAef,GAC7B,OAAOqC,EAAuB,GAAD,OACxBF,EADwB,kBACNnC,EADM,oBACaoC,EADb,mBAG9B,CAEM,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,iCACyCa,EADzC,+BAG9B,CAEM,SAASC,EAAkBlD,GAChC,OAAOqC,EAAuB,GAAD,OACxBF,EADwB,kBACNnC,EADM,4BACqBoC,EADrB,mBAG9B,CAEM,SAASe,EAAkBnD,GAChC,OAAOqC,EAAuB,GAAD,OACxBF,EADwB,kBACNnC,EADM,4BACqBoC,EADrB,0BAG9B,C","sources":["components/Loader/Loader.jsx","pages/MovieDetailsPage.jsx","services/movie-api.jsx"],"sourcesContent":["import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </>\n  );\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieById } from 'services/movie-api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from || '/');\n  let releaseYear = null;\n\n  useEffect(() => {\n    if (!movieId) return;\n    setLoader(true);\n    fetchMovieById(movieId)\n      .then(data => {\n        setMovieDetails(data);\n      })\n      .finally(() => setLoader(false));\n  }, [movieId]);\n\n  if (movieDetails) {\n    releaseYear = movieDetails.release_date.slice(0, 4);\n  }\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <>\n      {loader && <Loader />}\n      {movieDetails && (\n        <>\n          <Link to={backLink.current}>Go back</Link>\n\n          <img\n            src={\n              movieDetails.poster_path\n                ? `https://image.tmdb.org/t/p/w300/${movieDetails.poster_path}`\n                : defaultImg\n            }\n            width={250}\n            alt=\"poster\"\n          />\n          <h2>\n            {movieDetails.title} ({releaseYear})\n          </h2>\n          <p>User Score: {movieDetails.vote_average * 10}%</p>\n          <h3>Overview</h3>\n          <p>{movieDetails.overview}</p>\n          <h3>Genres</h3>\n          <ul>\n            {movieDetails.genres.map(({ id, name }) => {\n              return (\n                <li\n                  style={{\n                    marginRight: '10px',\n                  }}\n                  key={id}\n                >\n                  {name}\n                </li>\n              );\n            })}\n          </ul>\n          <p>Additional information</p>\n\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'afc97726cd3b4e142bea1138da06bc07';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","movieId","useParams","useState","movieDetails","setMovieDetails","loader","setLoader","location","useLocation","backLink","useRef","state","from","releaseYear","useEffect","fetchMovieById","then","data","finally","release_date","slice","to","current","src","poster_path","alt","title","vote_average","overview","genres","map","id","name","style","marginRight","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovies","query","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}