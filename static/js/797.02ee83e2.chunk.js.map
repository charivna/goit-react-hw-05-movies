{"version":3,"file":"static/js/797.02ee83e2.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAI5D,C,oDCMD,IApBkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,8BACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,KAE7BC,MAAO,CAAEC,KAAMR,GAJjB,SAMGG,EAAMM,SAPFN,EAAMG,GADA,KActB,C,+FCiCD,UA/CqB,WAAO,IAAD,EACzB,GAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAA4BD,EAAAA,EAAAA,WAAS,GAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BN,EAAAA,EAAAA,UAAQ,UAACK,EAAaE,IAAI,eAAlB,QAA6B,IAA/D,eAAOC,EAAP,KAAcC,EAAd,KA2BA,OATAC,EAAAA,EAAAA,YAAU,WACRP,GAAU,IACVQ,EAAAA,EAAAA,IAAkBN,GACfO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPZ,EAAUY,EACX,IACAC,SAAQ,kBAAMX,GAAU,EAAhB,GACZ,GAAE,CAACE,KAGF,iCACE,kBAAMU,OAAO,SAASC,SAvBL,SAAAC,GACnBA,EAAIC,iBAEiB,KAAjBV,EAAMW,QAKVb,EAAgB,CAAEc,KAAMZ,IACxBC,EAAS,KALPY,MAAM,oBAMT,EAaG,WACE,kBAAOC,SA5BQ,SAAAL,GACnBR,EAASQ,EAAIM,OAAOC,MACrB,EA0BoCA,MAAOhB,KACtC,4BAAQ,WACPN,IAAU,SAAC,IAAD,OAEZb,EAAOoC,OAAS,IACf,yBACE,SAAC,IAAD,CAAWpC,OAAQA,QAK5B,C,sLCnDKqC,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,CAAC,EAA1D,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,GAE7C,CAEM,SAASY,EAAeC,GAC7B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,oBACab,EADb,mBAG9B,CAEM,SAAShB,EAAkBH,GAChC,OAAOoB,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,iCACyCnB,EADzC,+BAG9B,CAEM,SAASiC,EAAkBD,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACqBb,EADrB,mBAG9B,CAEM,SAASe,EAAkBF,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACqBb,EADrB,0BAG9B,C","sources":["components/Loader/Loader.jsx","components/MovieList/MovieList.jsx","pages/MoviesPage.jsx","services/movie-api.jsx"],"sourcesContent":["import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={{\n              pathname: `/movies/${movie.id}`,\n            }}\n            state={{ from: location }}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default MovieList;\n","import MovieList from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'services/movie-api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MoviesSearch = () => {\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('film') ?? '');\n\n  const handleChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (query.trim() === '') {\n      alert('Please enter text');\n      return;\n    }\n\n    setSearchParams({ film: query });\n    setQuery('');\n  };\n\n  useEffect(() => {\n    setLoader(true);\n    fetchSearchMovies(searchParams)\n      .then(({ results }) => {\n        setMovies(results);\n      })\n      .finally(() => setLoader(false));\n  }, [searchParams]);\n\n  return (\n    <>\n      <form action=\"submit\" onSubmit={handleSubmit}>\n        <input onChange={handleChange} value={query}></input>\n        <button>Search</button>\n        {loader && <Loader />}\n      </form>\n      {movies.length > 0 && (\n        <ul>\n          <MovieList movies={movies} />\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MoviesSearch;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'afc97726cd3b4e142bea1138da06bc07';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","movies","location","useLocation","map","movie","to","pathname","id","state","from","title","useState","setMovies","loader","setLoader","useSearchParams","searchParams","setSearchParams","get","query","setQuery","useEffect","fetchSearchMovies","then","results","finally","action","onSubmit","evt","preventDefault","trim","film","alert","onChange","target","value","length","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieById","movieId","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}