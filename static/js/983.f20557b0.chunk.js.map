{"version":3,"file":"static/js/983.f20557b0.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/HomePage.jsx","pages/Pages.staled.jsx","services/movie-api.jsx"],"sourcesContent":["import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Film = styled.li``;\n\nexport const MoviesLink = styled(Link)`\n  text-decoration: none;\n  font-size: 30px;\n  color: black;\n  text-decoration: none;\n  font-weight: 250px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: #1e6c21de;\n    font-weight: bold;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Film, MoviesLink } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      {movies.map(movie => (\n        <Film key={movie.id}>\n          <MoviesLink\n            to={{\n              pathname: `/movies/${movie.id}`,\n            }}\n            state={{ from: location }}\n          >\n            {movie.title}\n          </MoviesLink>\n        </Film>\n      ))}\n    </>\n  );\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport * as API from '../services/movie-api';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { List, Title, WraperToday } from './Pages.staled';\n\nconst Homepage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n    API.fetchTrendingMovies()\n      .then(({ results }) => {\n        if (results.length === 0) {\n          alert(`No trending today`);\n          return;\n        }\n        setMovies(results);\n      })\n      .finally(() => setLoader(false));\n  }, []);\n\n  return (\n    <WraperToday>\n      <Title>Trending today</Title>\n      {loader && <Loader />}\n      {movies && (\n        <List>\n          <MovieList movies={movies} />\n        </List>\n      )}\n    </WraperToday>\n  );\n};\n\nexport default Homepage;\n","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Title = styled.h1``;\nexport const WraperToday = styled.div`\n  text-align: center;\n`;\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const Form = styled.form`\n  text-align: center;\n  margin: 20px 0;\n`;\n\nexport const Input = styled.input`\n  border: 2px solid black;\n  width: 300px;\n  height: 30px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 15px;\n  background-color: #1e6c21de;\n  color: #fff;\n  font-size: 15px;\n  font-weight: 600;\n  padding: 8px 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  border: 1.5px solid rgb(171, 163, 163);\n  box-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n\n  transition: background-color 250ms linear, box-shadow 250ms linear,\n    color 250ms linear;\n  &:hover {\n    background-color: white;\n    color: green;\n\n    box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const BtnBack = styled(Link)`\n  margin: 20px;\n  display: block;\n  width: 60px;\n  text-decoration: none;\n  background-color: #1e6c21de;\n  color: #fff;\n  font-size: 15px;\n  font-weight: 600;\n  padding: 8px 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  border: 1.5px solid rgb(171, 163, 163);\n  box-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n\n  transition: background-color 250ms linear, box-shadow 250ms linear,\n    color 250ms linear;\n  &:hover {\n    background-color: white;\n    color: green;\n\n    box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  margin: 20px;\n`;\n\nexport const MainText = styled.div`\n  margin-left: 20px;\n  font-size: 20px;\n`;\n\nexport const Genres = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  font-size: 20px;\n`;\n\nexport const AddInfo = styled.ul`\n  list-style: none;\n  text-decoration: none;\n  display: flex;\n  gap: 30px;\n`;\n\nexport const AddLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-size: 20px;\n  font-weight: 600;\n  text-decoration: none;\n  transition: color 250ms linear, font-weight 250ms linear;\n\n  &:hover {\n    color: #1e6c21de;\n    font-weight: 800;\n  }\n`;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'afc97726cd3b4e142bea1138da06bc07';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Film","styled","MoviesLink","Link","movies","location","useLocation","map","movie","to","pathname","id","state","from","title","useState","setMovies","loader","setLoader","useEffect","API","then","results","length","alert","finally","Title","WraperToday","List","Form","Input","Button","BtnBack","MainInfo","MainText","Genres","AddInfo","AddLink","NavLink","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieById","movieId","fetchSearchMovies","query","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}